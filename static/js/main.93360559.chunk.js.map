{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api/requests.ts","App.tsx","index.tsx"],"names":["MovieCard","React","memo","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","addMovie","useState","titleQuery","setTitleQuery","queriedMovie","setQueridMovie","hasError","setHasError","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","title","fetch","then","response","json","loadedMovie","App","setMovies","currMovies","some","currMovie","ReactDOM","render","document","getElementById"],"mappings":"gVAOaA,EAAYC,IAAMC,MAC7B,SAACC,GACC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,mCC9BCC,EAAaV,IAAMC,MAC9B,SAACC,GACC,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,gB,gBCTVC,G,MAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAuCF,mBAAuB,MAA9D,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAgCA,OACE,qCACE,uBACElB,UAAU,aACVmB,SAxBgB,SAACC,GACrBA,EAAMC,iBAEFN,IACFJ,EAASI,GARXD,EAAc,IACdE,EAAe,QAyBb,UAIE,sBAAKhB,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQsB,QAAQ,cAAjC,yBAIA,qBAAKtB,UAAU,UAAf,SACE,uBACEuB,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZzB,UAAW0B,IAAW,QAAS,CAAE,YAAaT,IAC9CU,MAAOd,EACPe,SAhDU,SAACR,GACrBF,GAAY,GACZJ,EAAcM,EAAMS,OAAOF,YAkDpBV,GACC,mBAAGjB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,kBACV8B,QA7CI,WC7BK,IAACC,KD8BZlB,EC7BHmB,MAAM,GAAD,OAHE,+CAGF,OAAcD,IAASE,MAAK,SAAAC,GAItC,OAAOA,EAASC,WDyBIF,MAAK,SAAAG,GAEnBA,EAAYhC,MACdY,EAAeoB,GAEflB,GAAY,OAoCR,4BASF,qBAAKlB,UAAU,UAAf,SACE,wBACEuB,KAAK,SACLvB,UAAU,oBAFZ,qCAUN,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCe,GACC,cAAC,EAAD,CAAWhB,MAAOgB,YE1FfsB,EAAgB,WAC3B,MAA4BzB,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe+B,EAAf,KAYA,OACE,sBAAKtC,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWW,SAhBA,SAACZ,GAChBuC,GAAU,SAAAC,GACR,OAAIA,EAAWC,MAAK,SAAAC,GAAS,OAAIA,EAAUhC,SAAWV,EAAMU,UACnD8B,EAGH,GAAN,mBAAWA,GAAX,gBAA4BxC,iBCXlC2C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.93360559.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard = React.memo<Props>(\n  (props) => {\n    const { movie } = props;\n\n    return (\n      <div className=\"card\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              src={movie.Poster}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n            <div className=\"media-content\">\n              <p className=\"title is-8\">{movie.Title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\">\n            {movie.Plot}\n            <br />\n          </div>\n        </div>\n      </div>\n    );\n  },\n);\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList = React.memo<Props>(\n  (props) => {\n    const { movies } = props;\n\n    return (\n      <div className=\"movies\">\n        {movies.map(movie => (\n          <MovieCard\n            key={movie.imdbID}\n            movie={movie}\n          />\n        ))}\n      </div>\n    );\n  },\n);\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { request } from '../../api/requests';\nimport './FindMovie.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [titleQuery, setTitleQuery] = useState('');\n  const [queriedMovie, setQueridMovie] = useState<Movie | null>(null);\n  const [hasError, setHasError] = useState(false);\n\n  const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setHasError(false);\n    setTitleQuery(event.target.value);\n  };\n\n  const reset = () => {\n    setTitleQuery('');\n    setQueridMovie(null);\n  };\n\n  const submitHandler = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (queriedMovie) {\n      addMovie(queriedMovie);\n      reset();\n    }\n  };\n\n  const getFilm = () => {\n    request(titleQuery).then(loadedMovie => {\n      // eslint-disable-next-line no-console\n      if (loadedMovie.Title) {\n        setQueridMovie(loadedMovie);\n      } else {\n        setHasError(true);\n      }\n    });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={submitHandler}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': hasError })}\n              value={titleQuery}\n              onChange={changeHandler}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={getFilm}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {queriedMovie && (\n          <MovieCard movie={queriedMovie} />\n        )}\n      </div>\n    </>\n  );\n};\n\ninterface Props {\n  addMovie: (movie: Movie) => void;\n}\n","const BaseURL = 'https://www.omdbapi.com/?apikey=fd38d107&t=';\n\nexport const request = (title:string) => {\n  return fetch(`${BaseURL}${title}`).then(response => {\n    // eslint-disable-next-line no-console\n    /*  console.log(response); */\n\n    return response.json();\n  });\n};\n","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie:Movie) => {\n    setMovies(currMovies => {\n      if (currMovies.some(currMovie => currMovie.imdbID === movie.imdbID)) {\n        return currMovies;\n      }\n\n      return [...currMovies, { ...movie }];\n    });\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}